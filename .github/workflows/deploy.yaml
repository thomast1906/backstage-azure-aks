on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

name: Publish

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.3
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

      - name: create-app
        run: npx @backstage/create-app
        env:
          BACKSTAGE_APP_NAME: example-app

      - name: yarn build
        run: yarn build:backend
        working-directory: ./example-app

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build the image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tamopsacr.azurecr.io/backstage:${{ github.sha }}
          file: packages/backend/Dockerfile
